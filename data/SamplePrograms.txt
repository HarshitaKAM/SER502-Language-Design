% Sample Programs

% 1 
start
[
int p is 2.
q is 3.
]
end
 
% Execution -
?- L =['start','[','int','p','is','2','.','q','is','3','.',']','end'],program(P,L,[]).

% o/p - 
L = [start, '[', int, p, (is), '2', ('.'), q, (is), '3', ('.'), ']', end],
P = parsetree(blockdec(deca(dtype1(int), assign(iden(letter(p)), arithexp(exp(factorn(num(digit('2'))))))), slist(stmtassign(assign(iden(letter(q)), arithexp(exp(factorn(num(digit('3'))))))))))

% 2
start
[
while(true)
[
b is 4.
].
]
end

% Execution -
?- L =['start','[','while','(','true',')','[','b','is','4','.',']','.',']','end'],program(P,L,[]).

% o/p -
L = [start, '[', while, '(', true, ')', '[', b, (is), '4', ('.'), ']', ('.'), ']', end],
P = parsetree(block(slist(stmtwhile(while(boolexptrue(true), block(slist(stmtassign(assign(iden(letter(b)), arithexp(exp(factorn(num(digit('4'))))))))))))))

% 3
start
[
int ab.
int c.
d is 0.
e is 1.
]
end

% Execution - 
?- L =['start','[','int','a','b','.','int','c','.','d','is','0','.','e','is','1','.',']','end'],program(P,L,[]).

% o/p -
L = [start, '[', int, a, b, ('.'), int, c, ('.'), d, (is), '0', ('.'), e, (is), '1', ('.'), ']', end],
P = parsetree(blockdec(decid(dtype1(int), iden1(letter(a), iden(letter(b))), deci(dtype1(int), iden(letter(c)))), slistrec(stmtassign(assign(iden(letter(d)), arithexp(exp(factorn(num(digit('0'))))))), slist(stmtassign(assign(iden(letter(e)), arithexp(exp(factorn(num(digit('1')))))))))))

% 4
start
[
int ab.
int b is 4.
c is 50*2+3.
]
end

% Execution -
?-L =['start','[','int','a','b','.','int','b','is','4','.','c','is','5','0','*','2','+','3','.',']','end'],program(P,L,[]).
% o/p -
L = [start, '[', int, a, b, ('.'), int, b, (is), '4', ('.'), c, (is), '5', '0', (*), '2', (+), '3', ('.'), ']', end],
P = parsetree(blockdec(decid(dtype1(int), iden1(letter(a), iden(letter(b))), deca(dtype1(int), assign(iden(letter(b)), arithexp(exp(factorn(num(digit('4')))))))), slist(stmtassign(assign(iden(letter(c)), arithexp1(exp1(factorn(num1(digit('5'), num(digit('0')))), resmul2(factorn(num(digit('2'))))), resarithsum(exp(factorn(num(digit('3')))))))))))

% 5
start
[
c is 10*5.
]
end

% Execution -
L =['start','[','c','is','1','0','*','5','.',']','end'],program(P,L,[]).

% o/p -
L = [start, '[', c, (is), '1', '0', (*), '5', ('.'), ']', end],
P = parsetree(block(slist(stmtassign(assign(iden(letter(c)), arithexp(exp1(factorn(num1(digit('1'), num(digit('0')))), resmul2(factorn(num(digit('5')))))))))))